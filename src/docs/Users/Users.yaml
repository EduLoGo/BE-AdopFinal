paths:
  /api/users/:
    get:
      summary: Obtiene todos los usuario
      tags:
        - Users
      responses:
        "200":
          description: Los usuario fueron obtenidos satisfactoriamente de la base de datos.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#components/schemas/Users'
        "500":
          description: Error interno en el servidor
  /api/users/{uid}:
    get:
      summary: Obtiene un solo usuario por su ID
      tags:
        - Users
      parameters:
        - name: uid
          in: path
          required: true
          description: ID del usuario que desea solicitar
          schema:
            $type: String
      responses:
        "200":
          description: El usuario fue obtenido satisfactoriamente de la base de datos.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#components/schemas/Users'
        "404":
          description: El usuario no fue encontrado en la base de datos.
        "500":
          description: Error interno en el servidor
    put:
      summary: Actualiza un usuario a partir de su ID.
      tags:
        - Users
      parameters:
      - name: uid
        in: path
        required: true
        description: ID del usuario que desea actualizar
        schema:
          $type: String
      requestBody:
        required: true
        content: 
          application/json:
            schema:
              $ref: '#components/requestBodies/updateUser'
      responses:
        "200":
          description: El usuario fue actualizado satisfactoriamente de la base de datos.
        "404":
          description: El usuario no fue encontrado en la base de datos.
        "500":
          description: Error interno en el servidor
    delete:
      summary: Elimina un usuario a partir de su ID.
      tags:
        - Users
      parameters:
      - name: uid
        in: path
        required: true
        description: ID del usuario que desea eliminar
        schema:
          $type: String
      responses:
        "200":
          description: El usuario fue eliminado satisfactoriamente de la base de datos.
        "404":
          description: El usuario no fue encontrado en la base de datos.
        "500":
          description: Error interno en el servidor

components:
  schemas:
    Users:
      type: object
      properties:
        _id:
          type: ObjectId
          description: ID autogenerado por MongoDB
        first_name:
          type: String
          description: Nombre del Usuario
        lats_name:
          type: String
          description: Apellido del Usuario
        email:
          type: String
          description: Correo electrónico del Usuario. Este campo es Único.
        password:
          type: String
          description: Contraseña Hasheada del Usuario.
      example:
        _id: ObjectId{672649060eb2b765ec830d27}
        first_name: Neoma
        last_name: Baumbach
        email: Pamela_Greenholt44@yahoo.com
        password: $2b$10$hZqpK6fOUzhUauwk5J92lOBCvr4dqrGgkgdzsTG/x7.4cEnhyHxte
  requestBodies:
    updateUser:
      type: object
      properties:
        first_name:
          type: String
          description: Nombre del Usuario
        lats_name:
          type: String
          description: Apellido del Usuario
        email:
          type: String
          description: Correo electrónico del Usuario. Este campo es Único.
        password:
          type: String
          description: Contraseña Hasheada del Usuario.
      example:
        first_name: User
        last_name: Test
        email: user.test@yahoo.com
        password: 12345678